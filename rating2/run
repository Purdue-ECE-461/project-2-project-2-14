#!/usr/bin/env python3

from src.config import *
import sys
import json
import os
from src.installer import installDeps

TEST_DIR = "src/test"

if __name__ == '__main__':
    if (len(sys.argv) < 2):
        raise Exception("Incorrect input")
    
    # task = sys.argv[1]

    # if task == "install":
    #     installDeps()
    #     print("4 dependencies installed...")

    # elif task == "test":
    #     if LOG_LEVEL > 0: # pragma: no cover
    #         LOG_FILE.write("Making sure the dependencies are installed")
    #     installDeps()
    #     if LOG_LEVEL > 0: # pragma: no cover
    #         LOG_FILE.write(f"Running test with files in src/test\n")
    #     import coverage
    #     cov = coverage.Coverage(omit='run')
    #     cov.start()

    #     results = json.load(open("result.json", "r"))

    #     tests = os.listdir(TEST_DIR)
    #     testfiles = [f"{TEST_DIR}/{t}" for t in tests]
    #     testfiles = sorted(testfiles)

    #     totalTests = len(testfiles)
    #     score = 0

    #     from src.run import run
    #     for t in testfiles:
    #         # print(f"Running test from file {t}")
    #         output = run(t)
    #         numLines = len(output)
    #         if numLines == results[t]:
    #             score += 1
    #         if LOG_LEVEL > 0: # pragma: no cover
    #             LOG_FILE.write(f"Calculated output for file {t}\n")
    #         if LOG_LEVEL > 1: # pragma: no cover
    #             for o in output:
    #                 LOG_FILE.write(o + "\n")

    #     cov.stop()
    #     cov.save()

    #     cov.json_report(outfile="cov.txt")
        
    #     covReport = json.load(open("cov.txt", "r"))

    #     coverageScore = covReport["totals"]["percent_covered"]

    #     print(f"Total: {totalTests}")
    #     print(f"Passed: {score}")
    #     print(f'Converage: {coverageScore:.2f}%')
    #     print(f"{score}/{totalTests} test cases passed. {coverageScore:.2f}% line coverage achived.")
    
    # else:
    # if LOG_LEVEL > 0: # pragma: no cover  ---- no logs
        # LOG_FILE.write("Making sure the dependencies are installed")
    # installDeps()
    URL = sys.argv[1]
    path = sys.argv[2]
    # path = f"../{path}"
    files = os.listdir(path)
    # print(path, URL)
    # print(os.path.isdir(path))
    # print(files)
    from src.run import newRun
    output = newRun(URL, path)
    print(f"{output[0]} {output[1]} {output[2]} {output[3]} {output[4]} {output[5]}")
    # for o in output:
        # print(o)
    # print(output)
# LOG_FILE.close()
